import React, { useState, useEffect, useMemo } from 'react';
import { Link, useLocation, useParams } from 'react-router-dom';
import axios from 'axios';
import './CourseOverview.css';

const DIFFICULTY_LABELS = {
  beginner: '–ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å',
  intermediate: '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å',
  advanced: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å',
};

const CourseOverview = () => {
  const [course, setCourse] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const location = useLocation();
  const { courseId: routeCourseId } = useParams();

  const resolvedCourseId = useMemo(() => {
    const parseId = (value) => {
      const numeric = Number(value);
      return Number.isInteger(numeric) && numeric > 0 ? numeric : null;
    };

    const fromRoute = parseId(routeCourseId);
    if (fromRoute) {
      return fromRoute;
    }

    const searchParams = new URLSearchParams(location.search);
    const fromQuery = parseId(searchParams.get('courseId'));
    if (fromQuery) {
      return fromQuery;
    }

    return 1;
  }, [location.search, routeCourseId]);

  useEffect(() => {
    const fetchCourse = async () => {
      setLoading(true);
      setError(null);

      try {
        const response = await axios.get(`/api/courses/${resolvedCourseId}`);
        setCourse(response.data);
      } catch (err) {
        const message =
          err?.response?.status === 404
            ? '–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –∫—É—Ä—Å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.'
            : '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ';
        setError(message);
        console.error('Error fetching course:', err);
      } finally {
        setLoading(false);
      }
    };

    fetchCourse();
  }, [resolvedCourseId]);

  if (loading) {
    return <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ...</div>;
  }

  if (error) {
    return <div className="error">{error}</div>;
  }

  if (!course) {
    return <div className="error">–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;
  }

  const difficultyKey =
    typeof course.difficulty_level === 'string'
      ? course.difficulty_level.toLowerCase()
      : 'beginner';
  const difficultyLabel = DIFFICULTY_LABELS[difficultyKey] || course.difficulty_level;
  const sortedTopics = [...(course.topics || [])].sort((a, b) => {
    if (a.order_index === b.order_index) {
      return a.id - b.id;
    }
    return a.order_index - b.order_index;
  });
  const descriptionParagraphs = (course.description
    ? course.description.split('\n')
    : ['–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–∑–∂–µ.'])
    .map((paragraph) => paragraph.trim())
    .filter(Boolean);

  if (descriptionParagraphs.length === 0) {
    descriptionParagraphs.push('–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–∑–∂–µ.');
  }

  return (
    <div className="course-overview">
      <div className="page-header">
        <div className="container">
          <h1>{course.title}</h1>
          <p>–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –º–∏—Ä —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</p>
        </div>
      </div>

      <div className="container">
        <div className="course-content">
          <div className="course-main">
            <div className="course-description">
              <h2>–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞</h2>
              <div className="description-text">
                {descriptionParagraphs.map((paragraph, index) => (
                  <p key={index}>{paragraph}</p>
                ))}
              </div>
            </div>

            {sortedTopics.length > 0 && (
              <div className="topics-preview">
                <h2>–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞</h2>
                <ul className="topics-preview-list">
                  {sortedTopics.map((topic) => (
                    <li key={topic.id} className="topic-preview-item">
                      <span className="topic-order-badge">{topic.order_index}</span>
                      <div className="topic-preview-content">
                        <h3>{topic.title}</h3>
                        <p>{topic.description}</p>
                        <div className="topic-preview-meta">
                          <span>‚è±Ô∏è {topic.duration_minutes} –º–∏–Ω—É—Ç</span>
                          <span>üìù {topic.assignments?.length || 0} –∑–∞–¥–∞–Ω–∏–π</span>
                        </div>
                      </div>
                    </li>
                  ))}
                </ul>
              </div>
            )}

            <div className="course-stats">
              <div className="stat-card">
                <div className="stat-icon">‚è±Ô∏è</div>
                <div className="stat-content">
                  <div className="stat-value">{course.duration_hours}</div>
                  <div className="stat-label">—á–∞—Å–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</div>
                </div>
              </div>
              <div className="stat-card">
                <div className="stat-icon">üìö</div>
                <div className="stat-content">
                  <div className="stat-value">{course.topics?.length || 0}</div>
                  <div className="stat-label">—Ç–µ–º –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è</div>
                </div>
              </div>
              <div className="stat-card">
                <div className="stat-icon">üéØ</div>
                <div className="stat-content">
                  <div className="stat-value">{difficultyLabel}</div>
                  <div className="stat-label">—É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏</div>
                </div>
              </div>
            </div>
          </div>

          <div className="course-sidebar">
            <div className="sidebar-card">
              <h3>–ß—Ç–æ –≤—ã –∏–∑—É—á–∏—Ç–µ</h3>
              <ul className="learning-list">
                <li>–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</li>
                <li>–ü—Ä–∏–Ω—Ü–∏–ø—ã —á–∏—Å—Ç–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã</li>
                <li>–†–∞–±–æ—Ç—É —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö</li>
                <li>–°–æ–∑–¥–∞–Ω–∏–µ API –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</li>
                <li>–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</li>
                <li>–ö–æ–º–∞–Ω–¥–Ω—É—é —Ä–∞–±–æ—Ç—É –∏ code review</li>
              </ul>
            </div>

            <div className="sidebar-card">
              <h3>–î–ª—è –∫–æ–≥–æ —ç—Ç–æ—Ç –∫—É—Ä—Å</h3>
              <ul className="audience-list">
                <li>–ù–∞—á–∏–Ω–∞—é—â–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏</li>
                <li>–°—Ç—É–¥–µ–Ω—Ç—ã IT-–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π</li>
                <li>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏, –∂–µ–ª–∞—é—â–∏–µ –∏–∑—É—á–∏—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</li>
                <li>–í—Å–µ, –∫—Ç–æ —Ö–æ—á–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</li>
              </ul>
            </div>

            <div className="sidebar-actions">
              <Link to="/topics" className="btn btn-full">
                –ù–∞—á–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ
              </Link>
              <Link to="/assignments" className="btn btn-secondary btn-full">
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–¥–∞–Ω–∏—è
              </Link>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CourseOverview;
